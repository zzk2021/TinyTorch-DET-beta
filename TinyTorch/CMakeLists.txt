cmake_minimum_required(VERSION 3.10)
project(TinyTorch)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if (${USE_CUDA})
    set(CMAKE_CUDA_ARCHITECTURES "60;70;75;80;89")
    find_package(CUDA REQUIRED)
    enable_language(CUDA)

    file(GLOB_RECURSE TinyTorch_src_cu "./TensorImpl/*.cu")
else ()
    set(TinyTorch_src_cu "")
endif ()

file(GLOB_RECURSE TinyTorch_src "./*.cpp" "./TensorImpl/*.cpp")
add_library(${PROJECT_NAME} ${TinyTorch_src} ${TinyTorch_src_cu})

if (CMAKE_BUILD_TYPE STREQUAL Debug)
    add_definitions(-DDEBUG)
elseif (CMAKE_BUILD_TYPE STREQUAL Release)
    if (MSVC)
        set_source_files_properties(${TinyTorch_src} PROPERTIES COMPILE_FLAGS "/Ox")
    else ()
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
    endif ()
endif ()

if (${USE_CUDA})
    include_directories(${CUDA_INCLUDE_DIRS})
    target_link_libraries(${PROJECT_NAME} ${CUDA_LIBRARIES} ${CUDA_curand_LIBRARY} ${CUDA_cublas_LIBRARY})
endif ()

if (${USE_BLAS})
    add_definitions(-DUSE_BLAS)
    if (MSVC)
        target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../thirdparty/OpenBLAS/win64-64/include)
        target_link_libraries(${PROJECT_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/../thirdparty/OpenBLAS/win64-64/lib/libopenblas.dll.a")
    elseif (APPLE)
        find_library(ACCELERATE_LIBRARY Accelerate)
        target_link_libraries(${PROJECT_NAME} ${ACCELERATE_LIBRARY})
    elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
        target_include_directories(${PROJECT_NAME} PRIVATE "/usr/include/openblas")
        target_link_libraries(${PROJECT_NAME} openblas)
    endif ()
endif ()
